.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "TABBEDEX 1"
.TH TABBEDEX 1 "2016-08-17" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
tabbedex \- tabbed interface to urxvt; extended
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This transforms the terminal into a tabbar with additional terminals, that is,
it implements what is commonly referred to as \*(L"tabbed terminal\*(R".  tabbedex is an
extended version of the tabbed plugin which comes with urxvt.
.PP
When rxvt-unicode is started with this plugin slave terminals or tabs can be
started and switched between.  One of the terminals is the current or active one
and it is the only one that is visible.  rxvt-unicode will exit once all tabs
are closed.
.PP
Once at least two slave terminals are created a tab bar is displayed at the top
of the window which lists all the slave terminals.  Clicking on a number/name of
a tab on that bar switches to given tab.
.SS "Key bindings"
.IX Subsection "Key bindings"
Creating new tabs, switching between them and moving them around is accomblished
by the following key bindings:
.IP "\fBShift-Down\fR" 4
.IX Item "Shift-Down"
Creates a new tab.
.IP "\fBShift-Left\fR and \fBShift-Right\fR" 4
.IX Item "Shift-Left and Shift-Right"
Switches to the tab on the left or on the right of the current tab.  Movement
wraps around once at the first or last tab.
.IP "\fBMeta\-F1\fR through \fBMeta\-F12\fR" 4
.IX Item "Meta-F1 through Meta-F12"
Switches to the first through twelfth tab.
.IP "\fBControl-Left\fR and \fBControl-right\fR" 4
.IX Item "Control-Left and Control-right"
Move current tab to the left or right.  Wraps around once on the first/last
position.
.IP "\fBShift-Up\fR" 4
.IX Item "Shift-Up"
Allows current tab to be renamed.  Start typing desired new name and press
Return to confirm or Escape to cancel.
.SH "CONFIGURATION"
.IX Header "CONFIGURATION"
The extension can be configured similarly to a normal terminal.  By default, it
uses a resource class of \f(CW\*(C`URxvt.tabbed\*(C'\fR which is the same as the tabbed
extension.
.IP "\fBautohide\fR: \fIboolean\fR" 4
.IX Item "autohide: boolean"
If set (the default), the tab bar will be hidden unless there are at least two
tabs open.  This is irrespective of whether \f(CW\*(C`NEW\*(C'\fR button or tab's title is
displayed.
.IP "\fBbell-fg\fR: \fIcolour index\fR" 4
.IX Item "bell-fg: colour index"
.PD 0
.IP "\fBbell-bg\fR: \fIcolour index\fR" 4
.IX Item "bell-bg: colour index"
.PD
Foreground and background colours of an inactive tab on which bell has rung.
(0, 3) by default which translates to black on brown/dark yellow (i.e. inverse
of the default tab bar colours).  See \fI\s-1COLOUR AND GRAPHICS\s0\fR in the \fIurxvt\fR\|(1)
manpage for valid indices.
.IP "\fBbell-tab-fg\fR: \fIcolour index\fR" 4
.IX Item "bell-tab-fg: colour index"
.PD 0
.IP "\fBbell-tab-bg\fR: \fIcolour index\fR" 4
.IX Item "bell-tab-bg: colour index"
.PD
Foreground and background colours of a active tab in which bell is ringing.  (5,
4) by default which translates to magenta an blue.  See \fI\s-1COLOUR AND GRAPHICS\s0\fR
in the \fIurxvt\fR\|(1) manpage for valid indices.  The bell is said to be ringing on
an active tab for \fBbell-timeout\fR seconds after it started, see \fBbell-timeout\fR.
.IP "\fBbell-timeout\fR: \fIinteger\fR" 4
.IX Item "bell-timeout: integer"
Time in seconds, one second by default, a bell is said to be ringing on current
tab for after it was rung.  Setting this to zero essentially disables the
\&\fBbell\-tab\-(fg|bg)\fR styling of tabs.
.IP "\fBnew-button\fR: \fIboolean\fR" 4
.IX Item "new-button: boolean"
If set, a \f(CW\*(C`NEW\*(C'\fR button will be displayed on the left of the tab bar.  Clicking
the button creates a new tab.  It is not displayed by default.
.IP "\fBnew-tab-command\fR: \fIstring\fR" 4
.IX Item "new-tab-command: string"
Specifies how urxvt's \fB\-e\fR switch affects tabs created by tabbedex.  The
resource can have one of three values:
.RS 4
.IP "\fIinherit\fR" 4
.IX Item "inherit"
The default.  The \fB\-e\fR command will be used by all tabs created by tabbedex.
.IP "\fIclear\fR" 4
.IX Item "clear"
Only the initial tab will use the \fB\-e\fR switch provided on urxvt's command line.
All other tabs will act as if the option was not provided.
.IP "\fI\-e \f(BIanother command\fI\fR" 4
.IX Item "-e another command"
The initial tab will use the \fB\-e\fR switch provided on urxvt's command line (if
any) while all other tabs will use switch specified by this setting.  Note that
parsing of the resource simply splits words on white space so things like \fI\-e
my-prog \*(L"argument with spaces\*(R"\fR will not work.
.RE
.RS 4
.RE
.IP "\fBno-tabbedex-keys\fR: \fIboolean\fR" 4
.IX Item "no-tabbedex-keys: boolean"
If set, the default key bindings (described at the beginning of this document)
are not initialised.  The mappings can be recreated using urxvt's support of
a keysym.* resource.  For example, the following will recreate all the default
key bindings:
.Sp
.Vb 10
\&    URxvt.tabbed.no\-tabbedex\-keys: yes
\&    URxvt.keysym.Shift\-Left: perl:tabbedex:prev_tab
\&    URxvt.keysym.Shift\-Right: perl:tabbedex:next_tab
\&    URxvt.keysym.Shift\-Down: perl:tabbedex:new_tab
\&    URxvt.keysym.Shift\-Up: perl:tabbedex:rename_tab
\&    URxvt.keysym.Control\-Left: perl:tabbedex:move_tab_left
\&    URxvt.keysym.Control\-Right: perl:tabbedex:move_tab_right
\&    URxvt.keysym.Meta\-F1: perl:tabbedex:goto_tab_1
\&    URxvt.keysym.Meta\-F2: perl:tabbedex:goto_tab_2
\&    URxvt.keysym.Meta\-F3: perl:tabbedex:goto_tab_3
\&    URxvt.keysym.Meta\-F4: perl:tabbedex:goto_tab_4
\&    URxvt.keysym.Meta\-F5: perl:tabbedex:goto_tab_5
\&    URxvt.keysym.Meta\-F6: perl:tabbedex:goto_tab_6
\&    URxvt.keysym.Meta\-F7: perl:tabbedex:goto_tab_7
\&    URxvt.keysym.Meta\-F8: perl:tabbedex:goto_tab_8
\&    URxvt.keysym.Meta\-F9: perl:tabbedex:goto_tab_9
\&    URxvt.keysym.Meta\-F10: perl:tabbedex:goto_tab_10
\&    URxvt.keysym.Meta\-F11: perl:tabbedex:goto_tab_11
\&    URxvt.keysym.Meta\-F12: perl:tabbedex:goto_tab_12
.Ve
.IP "\fBperl-ext-blacklist\fR: \fIstring\fR" 4
.IX Item "perl-ext-blacklist: string"
A comma-separated list of extensions that must not be loaded into the slave
terminals (tabs).  tabbedex plugin is implicitly added onto the list.
.IP "\fBreopen-on-close\fR: \fIboolean\fR" 4
.IX Item "reopen-on-close: boolean"
If set, whenever last tab is destroyed a new one will be created.
.IP "\fBtabbar-fg\fR: \fIcolor index\fR" 4
.IX Item "tabbar-fg: color index"
.PD 0
.IP "\fBtabbar-bg\fR: \fIcolor index\fR" 4
.IX Item "tabbar-bg: color index"
.PD
Foreground and background colours of the tab bar.  (3, 0) by default which
translates to brown/dark yellow on black background.  See \fI\s-1COLOUR AND GRAPHICS\s0\fR
in the \fIurxvt\fR\|(1) manpage for valid indices.
.IP "\fBtab-fg\fR: \fIcolor index\fR" 4
.IX Item "tab-fg: color index"
.PD 0
.IP "\fBtab-bg\fR: \fIcolor index\fR" 4
.IX Item "tab-bg: color index"
.PD
Foreground and background colours of the current tab on the tab bar.  (0, 1) by
default which translates to black on red.  See \fI\s-1COLOUR AND GRAPHICS\s0\fR in the
\&\fIurxvt\fR\|(1) manpage for valid indices.
.IP "\fBtabbar-timeouts\fR: \fIstring\fR" 4
.IX Item "tabbar-timeouts: string"
When new text is written to an inactive tab, activity marks are displayed around
its number (or name if it has one) on the tab bar.  By default Unicode
characters are used to display a block which grows with time the longer it was
since last time there was any activity in the tab.
.Sp
This resource allows for this to be customised.  It's format is
.Sp
.Vb 1
\&    ( <timeout> ":" <character> ":" )* <timeout> ":" <character> ":"
.Ve
.Sp
where <timeout> is timeout in seconds and <character> is a single activity
character.  If activity character is (, [, { or < it will be used as left
activity mark and matching character will be used on the right side.
.IP "\fBtabbedex-rs-prefix\fR: \fIstring\fR" 4
.IX Item "tabbedex-rs-prefix: string"
By default tabbedex uses the same prefix for resource names as tabbed plugin.
If this is not desired, the resource can be used to set a new prefix, for
example:
.Sp
.Vb 1
\&    URxvt.tabbed.tabbedex\-rs\-prefix: tabbedex
\&
\&    ! Affects tabbed only:
\&    URxvt.tabbed.tabbar\-fg: 4
\&    URxvt.tabbed.tabbar\-bg: 0
\&
\&    ! Affects tabbedex only:
\&    URxvt.tabbedex.tabbar\-fg: 5
\&    URxvt.tabbedex.tabbar\-bg: 0
.Ve
.Sp
This settings does not affect the \fBtabbedex-rs-prefix\fR resource itself which is
always read from \f(CW\*(C`URxvt.tabbed.tabbedex\-rs\-prefix\*(C'\fR.
.IP "\fBtitle\fR: \fIboolean\fR" 4
.IX Item "title: boolean"
If set (the default), when tab bar is visible and there is enough space left,
current tab's title will be displayed after the last tab.
.IP "\fBtitle-fg\fR: \fIcolor inde\fR" 4
.IX Item "title-fg: color inde"
.PD 0
.IP "\fBtitle-bg\fR: \fIcolor inde\fR" 4
.IX Item "title-bg: color inde"
.PD
Foreground and background colours of the tab title.  (2, 0) by default which
translates to green on black.  Only used when \fBtitle\fR is true.  See \fI\s-1COLOUR
AND GRAPHICS\s0\fR in the \fIurxvt\fR\|(1) manpage for valid indices.
.PP
Extension's behaviour is also influenced by some of URxvt's configuration
options as well.  (See \fI\s-1RESOURCES\s0\fR in the \fIurxvt\fR\|(1) manpage for more information about them).  The options include:
.IP "\fBmapAlert\fR" 4
.IX Item "mapAlert"
If set, when bell rings in an inactive tab, the tab is made active.
.IP "\fBurgentOnBell\fR" 4
.IX Item "urgentOnBell"
If set, when bell rings in an inactive tab, the master terminal's urgency hint
is set.
.SH "USER COMMANDS"
.IX Header "USER COMMANDS"
tabbedex supports several user commands which can be used with
\&\fBURxvt.keysym\fR.\fIkeysym\fR resource as well as other places.  The commands are:
.IP "\fBtabbedex:new_tab\fR" 4
.IX Item "tabbedex:new_tab"
Creates a new tab.
.IP "\fBtabbedex:next_tab\fR and \fBtabbedex:prev_tab\fR" 4
.IX Item "tabbedex:next_tab and tabbedex:prev_tab"
Switches to the tab on the right or left of the current tab.
.IP "\fBtabbedex:move_tab_left\fR and \fBtabbedex:move_tab_right\fR" 4
.IX Item "tabbedex:move_tab_left and tabbedex:move_tab_right"
Moves the current tab left or right.
.IP "\fBgoto_tab_\fR\fIN\fR where \fIN\fR is positive integer" 4
.IX Item "goto_tab_N where N is positive integer"
Switches to the tab given by the number \fIN\fR
.IP "\fBtabbedex:kill_tab\fR" 4
.IX Item "tabbedex:kill_tab"
Kills/destroys current tab.
.SH "OSC SEQUENCES"
.IX Header "OSC SEQUENCES"
tabbedex supports a single \s-1OSC\s0 sequence which can be invoked by programs running
in the terminal by writing a special sequence, namely \fI\s-1ESC \s0] 777 ; string \s-1ST\s0\fR
where \fIstring\fR is the command to execute.  For example:
.PP
.Vb 1
\&    printf \*(Aq\e033]777;tabbedx;set_tab_name;%s\e007\*(Aq "foo"
.Ve
.IP "\fBtabbedex;set_tab_name;\fR\fIname\fR" 4
.IX Item "tabbedex;set_tab_name;name"
Sets name of the current tab to \fIname\fR.
